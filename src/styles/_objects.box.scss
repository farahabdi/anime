@mixin spaced-flex-basis ($pad-space) {
  &.box--pad-between-thirds {
    > .box--basis-1-3 {
      // max-width: calc(33.33% - #{$pad-space * (2/3)});
      flex-basis: calc(33.33% - #{$pad-space * (2/3)});

      @include media-query (palm) {
        flex-basis: auto;
        max-width: none;
        // prevent width overflow in proportional boxes in mobile
        width: 100%;
      }
    }
  }

  > .box--basis-1-2 {
    // max-width: calc(50% - #{$pad-space * 0.5});
    flex-basis: calc(50% - #{$pad-space * 0.5});
  }

  > .box--basis-1-3 {
    // max-width: calc(33.33% - #{$pad-space * 0.5});
    flex-basis: calc(33.33% - #{$pad-space * 0.5});
  }

  > .box--basis-2-3 {
    // max-width: calc(66.66% - #{$pad-space * 0.5});
    flex-basis: calc(66.66% - #{$pad-space * 0.5});
  }

  > .box--basis-1-4 {
    // max-width: calc(25% - #{$pad-space * 0.75});
    flex-basis: calc(25% - #{$pad-space * 0.75});

    @include media-query(portable) {
      &:nth-of-type(2) {
        margin-right: 0px;
      }

      // max-width: calc(50% - #{$pad-space * 0.5});
      flex-basis: calc(50% - #{$pad-space * 0.5});
    }
  }

  > .box--basis-3-4 {
    // max-width: calc(75% - #{$pad-space * 0.75});
    flex-basis: calc(75% - #{$pad-space * 0.75});
  }

  @include media-query (palm) {
    > .box--basis-1-2,
    > .box--basis-1-3,
    > .box--basis-2-3,
    > .box--basis-1-4,
    > .box--basis-3-4 {
      flex-basis: auto;
      max-width: none;
      // prevent width overflow in proportional boxes in mobile
      width: 100%;
    }
  }
}

// // temporary flex grow capability
// .flex { // remove in 1.0?
//   flex-grow: 1;
//   // need to fix flexbox issue with min-width: auto for some tags
//   // https://weblog.west-wind.com/posts/2016/Feb/15/Flexbox-Containers-PRE-tags-and-managing-Overflow
//   min-width: 0;
// }
//
// .no-flex { // remove in 1.0?
//   flex: 0 0 auto;
// }

.box {
  display: flex;
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;

  @include pad();
  @include margin();
}

// Decorations

.box__texture {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  overflow: hidden;
}

.box--separator-top,
.box--separator-horizontal,
.box--separator-all {
  border-top: 1px solid $border-color;
}

.box--separator-bottom,
.box--separator-horizontal,
.box--separator-all {
  border-bottom: 1px solid $border-color;
}

.box--separator-left,
.box--separator-vertical,
.box--separator-all {
  border-left: 1px solid $border-color;

  @include media-query (palm) {
    .box--responsive.box--direction-row & {
      border-left: none;
      border-top: 1px solid $border-color;
    }
  }
}

.box--separator-right,
.box--separator-vertical,
.box--separator-all {
  border-right: 1px solid $border-color;

  @include media-query (palm) {
    .box--responsive.box--direction-row & {
      border-right: none;
      border-bottom: 1px solid $border-color;
    }
  }
}


// Interaction

.box--clickable {
  cursor: pointer;
  outline: none;
}

// Outer context

.box__container {
  padding-left: $inuit-base-spacing-unit;
  padding-right: $inuit-base-spacing-unit;
}

.app--centered .box__container >
  .box {
  width: 100%;
  max-width: $center-column-width;
  margin-left: auto;
  margin-right: auto;

  @include media-query(palm) {
    padding-left: 0px;
    padding-right: 0px;
  }
}

.box__container--full {
  max-width: 100%;
  width: 100vw;
}

.box__container--full-horizontal {
  max-width: 100%;
  width: 100vw;
}

// Sizing

// flex-grow, flex-shrink

.box--flex {
  flex: 1 1;
  // need to fix flexbox issue with min-width: auto for some tags
  min-width: 0;
  overflow: auto;
}

.box--flex-off {
  flex: 0 0 auto;
}

.box--flex-grow {
  flex: 1 0;

  &:not([class^=".box--basis"]) {
    flex-basis: auto;
  }

  // need to fix flexbox issue with min-width: auto for some tags
  min-width: 0;
}

// not necessary since this is the default
.box--flex-shrink {
  flex: 0 1;
}

// flex-basis

.box--basis-xsmall {
  flex-basis: $size-xsmall;
}

.box--basis-small {
  flex-basis: $size-small;
}

.box--basis-medium {
  flex-basis: $size-medium;
}

.box--basis-large {
  flex-basis: $size-large;
}

.box--basis-xlarge {
  flex-basis: $size-xlarge;
}

.box--basis-xxlarge {
  flex-basis: $size-xxlarge;
}

.box--basis-full {
  flex-basis: 100%;
}

.box--basis-1-2 {
  flex-basis: 50%;

  &.box--separator-all,
  &.box--separator-vertical {
    // account for border to avoid ie11 problems
    flex-basis: calc(50% - 2px);
  }

  &.box--separator-right,
  &.box--separator-left {
    // account for border to avoid ie11 problems
    flex-basis: calc(50% - 1px);
  }
}

.box--basis-1-3 {
  // max-width: 33.33%;
  flex-basis: 33.33%;

  &.box--separator-all,
  &.box--separator-vertical {
    // account for border to avoid ie11 problems
    flex-basis: calc(33.33% - 2px);
  }

  &.box--separator-right,
  &.box--separator-left {
    // account for border to avoid ie11 problems
    flex-basis: calc(33.33% - 1px);
  }
}

.box--basis-2-3 {
  flex-basis: 66.66%;

  &.box--separator-all,
  &.box--separator-vertical {
    // account for border to avoid ie11 problems
    flex-basis: calc(66.66% - 2px);
  }

  &.box--separator-right,
  &.box--separator-left {
    // account for border to avoid ie11 problems
    flex-basis: calc(66.66% - 1px);
  }
}

.box--basis-1-4 {
  flex-basis: 25%;

  &.box--separator-all,
  &.box--separator-vertical {
    // account for border to avoid ie11 problems
    flex-basis: calc(25% - 2px);
  }

  &.box--separator-right,
  &.box--separator-left {
    // account for border to avoid ie11 problems
    flex-basis: calc(25% - 1px);
  }

  @include media-query(portable) { // needed?
    flex-basis: 50%;

    &.box--separator-all,
    &.box--separator-vertical {
      // account for border to avoid ie11 problems
      flex-basis: calc(50% - 2px);
    }

    &.box--separator-right,
    &.box--separator-left {
      // account for border to avoid ie11 problems
      flex-basis: calc(50% - 1px);
    }
  }
}

.box--basis-3-4 {
  flex-basis: 75%;

  &.box--separator-all,
  &.box--separator-vertical {
    // account for border to avoid ie11 problems
    flex-basis: calc(75% - 2px);
  }

  &.box--separator-right,
  &.box--separator-left {
    // account for border to avoid ie11 problems
    flex-basis: calc(75% - 1px);
  }
}

// width

.box--width-xsmall {
  width: $size-xsmall;
}

.box--width-small {
  width: $size-small;
}

.box--width-medium {
  width: $size-medium;
}

.box--width-large {
  width: $size-large;
}

.box--width-xlarge {
  width: $size-xlarge;
}

.box--width-xxlarge {
  width: $size-xxlarge;
}

// height

.box--height-xsmall {
  height: $size-xsmall;
}

.box--height-small {
  height: $size-small;
}

.box--height-medium {
  height: $size-medium;
}

.box--height-large {
  height: $size-large;
}

.box--height-xlarge {
  height: $size-xlarge;
}

.box--height-xxlarge {
  height: $size-xxlarge;
}

// min-width

.box--width-min-xsmall {
  min-width: $size-xsmall;
}

.box--width-min-small {
  min-width: $size-small;
}

.box--width-min-medium {
  min-width: $size-medium;
}

.box--width-min-large {
  min-width: $size-large;
}

.box--width-min-xlarge {
  min-width: $size-xlarge;
}

.box--width-min-xxlarge {
  min-width: $size-xxlarge;
}

// max-width

.box--width-max-xsmall {
  max-width: $size-xsmall;
}

.box--width-max-small {
  max-width: $size-small;
}

.box--width-max-medium {
  max-width: $size-medium;
}

.box--width-max-large {
  max-width: $size-large;
}

.box--width-max-xlarge {
  max-width: $size-xlarge;
}

.box--width-max-xxlarge {
  max-width: $size-xxlarge;
}

// max-height

.box--height-max-xsmall {
  max-height: $size-xsmall;
}

.box--height-max-small {
  max-height: $size-small;
}

.box--height-max-medium {
  max-height: $size-medium;
}

.box--height-max-large {
  max-height: $size-large;
}

.box--height-max-xlarge {
  max-height: $size-xlarge;
}

.box--height-max-xxlarge {
  max-height: $size-xxlarge;
}

// min-height

.box--height-min-xsmall {
  min-height: $size-xsmall;
}

.box--height-min-small {
  min-height: $size-small;
}

.box--height-min-medium {
  min-height: $size-medium;
}

.box--height-min-large {
  min-height: $size-large;
}

.box--height-min-xlarge {
  min-height: $size-xlarge;
}

.box--height-min-xxlarge {
  min-height: $size-xxlarge;
}

// full

.box--full {
  position: relative;
  max-width: 100%;
  width: 100vw;
  height: 100vh;
  max-height: 100%;
  overflow: auto;

  &.box--full-responsive {
    @include media-query(palm) {
      min-height: 100vh;
      height: 100%;
    }
  }

  // // IE11 specific fix for aligning content vertically centered
  // // height gets over written by the > min-height
  // @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  //   height: 50vh;
  // }
}

.box--full-horizontal {
  max-width: 100%;
  width: 100vw;
}

.box--full-vertical {
  height: 100vh;
  max-height: 100%;
  overflow: auto;

  &.box--full-responsive {
    @include media-query(palm) {
      min-height: 100vh;
      height: 100%;
    }
  }

  // // IE11 specific fix for aligning content vertically centered
  // // height gets over written by the > min-height
  // @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  //   min-height: 100vh;
  //   height: 50vh;
  // }
}

.box--size {
  max-width: 100%;
  max-height: 100%;

  // deprecate? remove?
  .#{grommet-namespace}paragraph {
    width: 100%;
    max-width: 100%;
    flex: 0 0 auto;
  }
}

// deprecated use of the 'size' property

.box--size-xsmall {
  width: $size-xsmall;
}

.box--size-small {
  width: $size-small;
}

.box--size-medium {
  width: $size-medium;
}

.box--size-large {
  width: $size-large;
}

.box--size-xlarge {
  width: $size-xlarge;
}

.box--size-xxlarge {
  width: $size-xxlarge;
}

// As a container of text

.box--text-align-left {
  text-align: left;
}

.box--text-align-center {
  text-align: center;
}

.box--text-align-right {
  text-align: right;
}

// As a container of components

.box--wrap {
  flex-wrap: wrap;
}

.box--direction-row {
  flex-direction: row;
}

.box--direction-row.box--reverse {
  flex-direction: row-reverse;
}

@include media-query(palm) {
  .box--direction-row.box--responsive {
    flex-direction: column;

    &:not(.box--justify-center) {
      align-items: stretch;
    }

    &.box--reverse {
      flex-direction: column-reverse;
    }

    > .box {
      flex-basis: auto;
    }
  }
}

.box--direction-column {
  flex-direction: column;
}

.box--direction-column.box--reverse {
  flex-direction: column-reverse;
}

.box--justify-start {
  justify-content: flex-start;
}

.box--justify-center {
  justify-content: center;
  /// flex-shrink: 0;
}

.box--justify-between {
  justify-content: space-between;
}

.box--justify-around {
  justify-content: space-around;
}

.box--justify-end {
  justify-content: flex-end;
}

.box--align-start {
  align-items: flex-start;
}

.box--align-center {
  align-items: center;
}

.box--align-end {
  align-items: flex-end;
}

.box--align-baseline {
  align-items: baseline;
}

.box--align-stretch {
  align-items: stretch;
}

.box--align-content-start {
  align-content: flex-start;
}

.box--align-content-end {
  align-content: flex-end;
}

.box--align-content-center {
  align-content: center;
}

.box--align-content-between {
  align-content: space-between;
}

.box--align-content-around {
  align-content: space-around;
}

.box--align-content-stretch {
  align-content: stretch;
}

.box--align-self-start {
  align-self: flex-start;
}

.box--align-self-end {
  align-self: flex-end;
}

.box--align-self-center {
  align-self: center;
}

.box--align-self-stretch {
  align-self: stretch;
}

// Container component padding (deprecate?)

.box--direction-row.box--pad-between-small {
  @include spaced-flex-basis(halve($inuit-base-spacing-unit));

  > *:not(:last-child) {
    margin-right: halve($inuit-base-spacing-unit);

    html.rtl & {
      margin-right: 0;
      margin-left: halve($inuit-base-spacing-unit);
    }
  }

  @include media-query(palm) {
    > *:not(:last-child) {
      margin-right: quarter($inuit-base-spacing-unit);

      html.rtl & {
        margin-right: 0;
        margin-left: quarter($inuit-base-spacing-unit);
      }
    }
  }
}

.box--direction-row.box--pad-between-medium {
  @include spaced-flex-basis($inuit-base-spacing-unit);

  > *:not(:last-child) {
    margin-right: $inuit-base-spacing-unit;

    html.rtl & {
      margin-right: 0;
      margin-left: $inuit-base-spacing-unit;
    }
  }

  @include media-query(palm) {
    > *:not(:last-child) {
      margin-right: halve($inuit-base-spacing-unit);

      html.rtl & {
        margin-right: 0;
        margin-left: halve($inuit-base-spacing-unit);
      }
    }
  }
}

.box--direction-row.box--pad-between-large {
  @include spaced-flex-basis(double($inuit-base-spacing-unit));

  > *:not(:last-child) {
    margin-right: double($inuit-base-spacing-unit);

    html.rtl & {
      margin-right: 0;
      margin-left: double($inuit-base-spacing-unit);
    }
  }
  @include media-query(palm) {
    > *:not(:last-child) {
      margin-right: $inuit-base-spacing-unit;

      html.rtl & {
        margin-right: 0;
        margin-left: $inuit-base-spacing-unit;
      }
    }
  }
}

@include media-query(palm) {
  .box--direction-row.box--responsive {
    // make sure between padding switches directions
    // on responsive
    &.box--pad-between-small {
      > *:not(:last-child) {
        margin-left: 0;
        margin-right: 0;
        margin-bottom: quarter($inuit-base-spacing-unit);
      }
    }

    &.box--pad-between-medium {
      > *:not(:last-child) {
        margin-left: 0;
        margin-right: 0;
        margin-bottom: halve($inuit-base-spacing-unit);
      }
    }

    &.box--pad-between-large {
      > *:not(:last-child) {
        margin-left: 0;
        margin-right: 0;
        margin-bottom: $inuit-base-spacing-unit;
      }
    }
  }
}

.box--direction-column.box--pad-between-small {
  > *:not(:last-child) {
    margin-bottom: halve($inuit-base-spacing-unit);
  }

  @include media-query(palm) {
    > *:not(:last-child) {
      margin-bottom: quarter($inuit-base-spacing-unit);
    }
  }
}

.box--direction-column.box--pad-between-medium {
  > *:not(:last-child) {
    margin-bottom: $inuit-base-spacing-unit;
  }

  @include media-query(palm) {
    > *:not(:last-child) {
      margin-bottom: halve($inuit-base-spacing-unit);
    }
  }
}

.box--direction-column.box--pad-between-large {
  > *:not(:last-child) {
    margin-bottom: double($inuit-base-spacing-unit);
  }

  @include media-query(palm) {
    > *:not(:last-child) {
      margin-bottom: $inuit-base-spacing-unit;
    }
  }
}
